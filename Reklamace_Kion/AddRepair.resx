<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FsL4IjLbQRhfiNcBtAc+SFOIq0QuE1yJqdZKa6AiXe1VDWmtJxMuJnN+ghWmLCLLhGwAIb0ls4qPpFXr
        IklWPfhC9f6cYPsmx9uP4FM1g/m4w3g+WnsqH3ScwQec5/Mel0je5bqGv3D7mLe5f8Efe37DUQ0P8eom
        pyDmeVnSPEUWt74hS3wfyRzfB7ow33tbQjreaGy49X+tcROETj1yQkS20bekkRDtW+5ChfIKROkCMV+B
        iIC7otyBirkNPhV5Uxx70Ak8iKt4aeUj0p+wCV40EPJnMX/CCJhD1Or8iFz4vqm33K7aSa5b9ZQMm/6S
        bPumJNqPkIRawRLvECIna0+RY45hcthpjnznslj21VkhXyMiv3T7RL5w3ykxnvtlW6PjEt00UbY0z5JN
        rW7L8lY3ZXGbgqS5PrcjprZN+/eI+H9ZaXvqqvWgo9IXgvwEa0D6QcgeVKT50bf61uTPjag3tkNBeiua
        pDejmQU2VusOt/XL2PPqa3LEx4+/927FF7y8OcWtKac5N+VMW2/9bbOWP+ab+d3PsuxZnGrzuqTYDZek
        mmPkksMkuVj7bUl0mikXkNIJSOl41zVy0vUjiXPbKgfdY7FO7pVdXockxitOPm107tGWpmnXNja/Hhfp
        nbFxQfOsoRHNEm0Nt/DyGEQco71BuTIEETYIAvpDyDfh34CovfEppy/VNXT9xZxjTlo3/urE5tYHEqTL
        53vktahoDly+micujOBZ4XMkcuq0ot2dBu1PNe+4KrXqqx9dshnwRYLtsL3f240+eqLm+PgTDpMuHKv9
        dvIRx5mph50Wph10ibz6rcvqq3vrbkr7yjX6Smz97Ymfue8+Fu3xXexmz5OrNja6MHFT06u+K5rmvLzf
        kHMAuXMgfSqjIGQQBAyEgCMgpioPxktqCPkauv7GrBLSZ9U6m65zvJghzgmJUu/0KfY6fYhbJ38nfim7
        C7udj44auW6+dxZ1s0yi3tanqo90OOk8zvVEzYlexxymecfVDmt72GlGh0MuCzrtd17ada/z8m57XDZ1
        +tp1m+9ut53eX9T72u0LtxO2Ua7nLaNafGMeTliZX2aTcDLRj6JJHEzFMg7pPRYCjoGQE8rKBTyGhnEP
        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
        RK5CYII=
</value>
  </data>
</root>